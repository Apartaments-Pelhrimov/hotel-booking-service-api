openapi: "3.0.3"
info:
  title: "hotel_booking_service API"
  description: "hotel_booking_service API"
  version: "1.0.0"
servers:
  - url: "https://localhost"
paths:
  /api/users/me:
    get:
      security:
        - bearerAuth: [ ]
      summary: "GET api/users/me"
      operationId: "getOne"
      responses:
        200:
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserDto"
        404:
          description: "NOT FOUND"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
        403:
          description: "FORBIDDEN"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"

  /api/users/me/account:
    get:
      security:
        - bearerAuth: [ ]
      summary: "GET api/users/me/account"
      operationId: "getAccount"
      responses:
        200:
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserAccountDto"
        404:
          description: "NOT FOUND"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
        403:
          description: "FORBIDDEN"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
    delete:
      security:
        - bearerAuth: [ ]
      summary: "DELETE api/users/me/account"
      operationId: "deleteAccount"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteMeDto"
        required: true
      responses:
        204:
          description: "No Content"
        404:
          description: "NOT FOUND"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
        403:
          description: "FORBIDDEN"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
    patch:
      security:
        - bearerAuth: [ ]
      summary: "PATCH api/users/me/account"
      operationId: "changeAccount"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangeUserForm"
        required: true
      responses:
        204:
          description: "No Content"
        404:
          description: "NOT FOUND"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
        403:
          description: "FORBIDDEN"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
  /api/users/me/account/password:
    put:
      security:
        - bearerAuth: [ ]
      summary: "PUT api/users/me/account/password"
      operationId: "putPassword"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangePasswordDto"
        required: true
      responses:
        204:
          description: "No Content"
        404:
          description: "NOT FOUND"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
        403:
          description: "FORBIDDEN"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
  /api/users/me/account/notifications:
    patch:
      security:
        - bearerAuth: [ ]
      summary: "PATCH api/users/me/account/notifications"
      operationId: "changeNotificationSettings"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangeNotificationSettingsForm"
        required: true
      responses:
        204:
          description: "No Content"
        404:
          description: "NOT FOUND"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
        403:
          description: "FORBIDDEN"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    UserDto:
      type: "object"
      properties:
        firstName:
          type: "string"
        lastName:
          type: "string"
        photo:
          type: "string"
        role:
          type: "string"
          enum:
            - "USER"
            - "MANAGER"
    NotificationSettings:
      type: "object"
      properties:
        receiveOrderEmails:
          type: "boolean"
        receiveNewsEmails:
          type: "boolean"
    UserAccountDto:
      type: "object"
      properties:
        firstName:
          type: "string"
        lastName:
          type: "string"
        photo:
          type: "string"
        role:
          type: "string"
          enum:
            - "USER"
            - "MANAGER"
        phone:
          type: "string"
        email:
          type: "string"
        notificationSettings:
          $ref: "#/components/schemas/NotificationSettings"
    DeleteMeDto:
      type: "object"
      properties:
        password:
          type: "string"
    ChangePasswordDto:
      type: "object"
      properties:
        newPassword:
          type: "string"
        oldPassword:
          type: "string"
    ChangeUserForm:
      type: "object"
      properties:
        firstName:
          type: "string"
        lastName:
          type: "string"
        phone:
          type: "string"
    ChangeNotificationSettingsForm:
      type: "object"
      properties:
        receiveOrderEmails:
          type: "boolean"
        receiveNewsEmails:
          type: "boolean"
    ApiError:
      type: "object"
      properties:
        timestamp:
          type: "string"
        status:
          type: "integer"
        error:
          type: "string"
        message:
          type: "string"
        fieldErrors:
          type: "array"
          items:
            type: "object"
            properties:
              field:
                type: "string"
              message:
                type: "string"


